{"version":3,"sources":["Context.js","components/Contact/index.js","components/Contact/Contacts.js","components/Layout/Header/index.js","components/Layout/Group/TextInputGroup.js","components/Contact/AddContact.js","components/Pages/About.js","components/Pages/NotFound.js","components/Contact/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","response","newContacts","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","onShowClick","e","preventDefault","showContactInfo","onDeleteClick","_ref","fetch","method","then","console","log","_x","_x2","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","bind","float","color","react_router_dom","to","marginRight","Contacts","Fragment","components_Contact","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","_this$state","newContact","abrupt","post","history","push","handleChange","defineProperty","target","_this$state2","Group_TextInputGroup","Pages","NotFound","EditContact","upContact","match","params","put","App","Context_Provider","basename","process","Layout_Header","react_router","exact","path","component","About","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48fac859.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends React.Component {\n  state = {\n    contacts: [],\n\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  async componentDidMount() {\n    const response = await axios.get(\n      \"https://jsonplaceholder.typicode.com/users\"\n    );\n    let newContacts = await response.data;\n    this.setState({ contacts: newContacts });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../Context\";\nimport { Link } from \"react-router-dom\";\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { showContactInfo: true };\n  }\n\n  onShowClick = e => {\n    e.preventDefault();\n    this.setState({\n      showContactInfo: !this.state.showContactInfo\n    });\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    await fetch(\"https://jsonplaceholder.typicode.com/users/\" + id, {\n      method: \"delete\"\n    })\n      .then(() => {\n        dispatch({ type: \"DELETE_CONTACT\", payload: id });\n      })\n      .then(() => {\n        console.log(\"Delete Sucefully\");\n      });\n\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={this.onShowClick}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                />\n                <i\n                  onClick={this.onDeleteClick.bind(this, id, value.dispatch)}\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./index\";\nimport { Consumer } from \"../../Context\";\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span>List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default Contacts;\n","import React from \"react\";\nimport propTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" />\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" />\n                Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" />\n                About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"MyApp\"\n};\n\nHeader.propTypes = {\n  branding: propTypes.string.isRequired\n};\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"name\">{label}</label>\n      <input\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string.isRequired\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\",\n  error: \"\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../Context\";\nimport TextInputGroup from \"../Layout/Group/TextInputGroup\";\nimport axios from \"axios\";\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    //Check for Erros\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const response = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n\n    dispatch({ type: \"ADD_CONTACT\", payload: response.data });\n\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\n\n    this.props.history.push(\"/\");\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Contact name\"\n                    value={name}\n                    onChange={this.handleChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Contact email\"\n                    value={email}\n                    onChange={this.handleChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Contact phone\"\n                    value={phone}\n                    onChange={this.handleChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default AddContact;\n","import React from \"react\";\n\n// import { Container } from './styles';\n\nexport default function Pages() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple App to manager contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">404 Page Not Found</h1>\n      <p className=\"lead\"> Sorry, that page does not exist </p>\n    </div>\n  );\n};\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../Context\";\nimport TextInputGroup from \"../Layout/Group/TextInputGroup\";\nimport axios from \"axios\";\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n\n    const response = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = response.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n    //Check for Erros\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const upContact = {\n      name,\n      email,\n      phone\n    };\n\n    const { id } = this.props.match.params;\n\n    console.log(upContact);\n    const response = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      upContact\n    );\n\n    const data = await response.data;\n\n    console.log(data);\n\n    dispatch({ type: \"UPDATE_CONTACT\", payload: data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Contact name\"\n                    value={name}\n                    onChange={this.handleChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    placeholder=\"Contact email\"\n                    value={email}\n                    onChange={this.handleChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Contact phone\"\n                    value={phone}\n                    onChange={this.handleChange}\n                    error={errors.phone}\n                  />\n\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\nexport default EditContact;\n","import React from \"react\";\nimport \"./App.css\";\nimport Contacts from \"./components/Contact/Contacts\";\nimport Header from \"./components/Layout/Header\";\nimport { Provider } from \"./Context\";\nimport AddContact from \"./components/Contact/AddContact\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport About from \"./components/Pages/About\";\nimport NotFound from \"./components/Pages/NotFound\";\nimport EditContact from \"./components/Contact/EditContact\";\n\nconst App = () => {\n  return (\n    <Provider>\n      <Router basename={process.env.PUBLIC_URL}>\n        {\" \"}\n        <div className=\"App\">\n          <Header branding=\"Contcat manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}